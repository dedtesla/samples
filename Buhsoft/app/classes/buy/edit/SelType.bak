Ext.define('Buh.classes.buy.edit.SelType',{
extend: 'Ext.form.field.ComboBox',
xtype : 'buy_sel_type',
//width: 200,
//sprav_block : 0,
editable : false,
queryMode: 'local',
valueField: 'id',
displayField: 'name',
store : null,



createPicker: function() {
    var me = this,
        picker,
        pickerCfg = {
            xtype: 'window',
            cls: 'window-menu',
            header : false,
            width : 500,
            height : 300,
            floating : true,
            layout:'fit',

    items :        {
            xtype: 'grid',
            itemId: 'grid1',
            sprav_block : 0,
            store: {
                xtype: 'store',
                fields: ['id', 'id_sprav', 'name'],
                data: [
                    {"id": 5, "id_sprav": 5, "name": 'Товары'},
                    {"id": 3, "id_sprav": 3, "name": 'Материалы'},
                    {"id": 31, "id_sprav": 3, "name": 'Услуги'},
                    {"id": 32, "id_sprav": 3, "name": 'РБП'},
                    {"id": 4, "id_sprav": 4, "name": 'Продукция'},
                    {"id": 41, "id_sprav": 4, "name": 'Услуги'},
                    {"id": 1, "id_sprav": 1, "name": 'ОС'},
                    {"id": 2, "id_sprav": 2, "name": 'НМА'}
                ]
            },
            hideHeaders: true,
            columns: [{
                header: 'id',
                dataIndex: 'id',
                width: 100,
                hidden: true
            }, {
                header: 'Название',
                dataIndex: 'name',
                flex: 1,
                renderer: function (v, column, record) {
                    var win = arguments[6].up('grid');
                    if (win.sprav_block != 0 & record.get('id') != win.sprav_block) {
                        column.tdAttr = 'data-qtip="Добавление разных типов номенклатуры пока недоступно в программе. Чтобы ввести другой тип оформите новую покупку"';
                        return "<span class='txt-grey'>" + record.get('name') + "</span>";
                    }
                    else
                        return record.get('name');
                },
            }],

          }


        };

    var picker = me.picker = Ext.widget(pickerCfg);

    me.mon(picker.down('grid'), {
            itemclick: me.onItemClick,
            scope: me
        });

    return picker;
},

onItemClick : function(g, rec){
  var me = this,
      grid = me.getPicker().down('grid');
  if (grid.sprav_block == 0 || rec.data.id == grid.sprav_block) {
    me.setValue(rec.data.name);
    me.up('grid').fireEvent('selecttype', rec);
    me.collapse();
  }
},

onExpand : function(){
  var grid = this.getPicker().down('grid'),
      An = Ext.create('Buh.classes.common.Values');
  this.getPicker().setWidth(400);
  this.setRawValue(An.getArAnalit(this.getValue()));
  grid.getView().refresh();

},

onFocus : function(){
   this.expand();
},

onSet : function(_sprav){
   cons(_sprav);
   this.getPicker( ).down('grid').sprav_block = _sprav;
},

});


